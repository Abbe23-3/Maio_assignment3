name: CI

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: pip install --upgrade pip && pip install -r requirements.txt
      - name: Lint (flake8)
        run: |
          pip install flake8
          flake8
      - name: Run tests
        run: PYTHONPATH=. pytest -q

  train-and-smoke:
    runs-on: ubuntu-latest
    needs: lint-test
    strategy:
      fail-fast: false
      matrix:
        include:
          - version: v0.1
            model: linear
          - version: v0.2
            model: ridge
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: pip install --upgrade pip && pip install -r requirements.txt
      - name: Train ${{ matrix.version }}
        run: >
          python -m src.train
          --version ${{ matrix.version }}
          --model ${{ matrix.model }}
          --out_dir models
          --random_state 42
      - name: Show metrics
        run: cat models/metrics_${{ matrix.version }}.json
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-${{ matrix.version }}
          path: |
            models/model_${{ matrix.version }}.joblib
            models/metrics_${{ matrix.version }}.json
      - name: Build Docker image
        if: matrix.version == 'v0.2'
        run: docker build -t triage:${{ github.sha }} .
      - name: Smoke test Docker image
        if: matrix.version == 'v0.2'
        shell: bash
        run: |
          docker run -d --name triage_test -p 8080:8080 triage:${{ github.sha }}
          trap 'docker rm -f triage_test' EXIT
          sleep 5
          curl -f http://localhost:8080/health
          curl -f -X POST http://localhost:8080/predict \
            -H "Content-Type: application/json" \
            -d '[{"age":0,"sex":0,"bmi":0,"bp":0,"s1":0,"s2":0,"s3":0,"s4":0,"s5":0,"s6":0}]'
